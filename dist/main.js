(()=>{"use strict";var n={890:(n,t,e)=>{e.d(t,{Z:()=>c});var o=e(537),r=e.n(o),a=e(645),i=e.n(a)()(r());i.push([n.id,".homepage {\n    font-size:25px;\n}\n\nh1 {\n    font-size:70px;\n    color:#fde68a;\n\n}\n\nbody {\n    font-size:25px;\n    display:flex;\n    flex-direction:column;\n    align-items:center;\n    justify-content:center;\n    width:100%;\n    background-color:#334155;\n    color:white;\n\n}\n\n#content {\n    display:flex;\n    flex-direction:column;\n    justify-content:center;\n    align-items:center;\n    max-width:65%;\n    gap:20px;\n}\n\nbutton {\n\tbox-shadow:inset 0px 1px 0px 0px #bbdaf7;\n\tbackground:linear-gradient(to bottom, #79bbff 5%, #378de5 100%);\n\tbackground-color:#79bbff;\n\tborder-radius:32px;\n\tborder:5px solid #84bbf3;\n\tdisplay:inline-block;\n\tcursor:pointer;\n\tcolor:#ffffff;\n\tfont-family:Arial;\n\tfont-size:23px;\n\tfont-weight:bold;\n\tpadding:6px 24px;\n\ttext-decoration:none;\n\ttext-shadow:0px 1px 0px #528ecc;\n}\nbutton:hover {\n\tbackground:linear-gradient(to bottom, #378de5 5%, #79bbff 100%);\n\tbackground-color:#378de5;\n}\n\nbutton {\n\tposition:relative;\n\ttop:1px;\n}\n\n        \n.homeContentDiv {\n\n    display:flex;\n    align-items:center;\n    justify-content:center;\n}\n\n.homeContentDiv > img {\n    max-width:50%;\n    max-height:50%;\n}","",{version:3,sources:["webpack://./src/styles/style.css"],names:[],mappings:"AAAA;IACI,cAAc;AAClB;;AAEA;IACI,cAAc;IACd,aAAa;;AAEjB;;AAEA;IACI,cAAc;IACd,YAAY;IACZ,qBAAqB;IACrB,kBAAkB;IAClB,sBAAsB;IACtB,UAAU;IACV,wBAAwB;IACxB,WAAW;;AAEf;;AAEA;IACI,YAAY;IACZ,qBAAqB;IACrB,sBAAsB;IACtB,kBAAkB;IAClB,aAAa;IACb,QAAQ;AACZ;;AAEA;CACC,wCAAwC;CACxC,+DAA+D;CAC/D,wBAAwB;CACxB,kBAAkB;CAClB,wBAAwB;CACxB,oBAAoB;CACpB,cAAc;CACd,aAAa;CACb,iBAAiB;CACjB,cAAc;CACd,gBAAgB;CAChB,gBAAgB;CAChB,oBAAoB;CACpB,+BAA+B;AAChC;AACA;CACC,+DAA+D;CAC/D,wBAAwB;AACzB;;AAEA;CACC,iBAAiB;CACjB,OAAO;AACR;;;AAGA;;IAEI,YAAY;IACZ,kBAAkB;IAClB,sBAAsB;AAC1B;;AAEA;IACI,aAAa;IACb,cAAc;AAClB",sourcesContent:[".homepage {\n    font-size:25px;\n}\n\nh1 {\n    font-size:70px;\n    color:#fde68a;\n\n}\n\nbody {\n    font-size:25px;\n    display:flex;\n    flex-direction:column;\n    align-items:center;\n    justify-content:center;\n    width:100%;\n    background-color:#334155;\n    color:white;\n\n}\n\n#content {\n    display:flex;\n    flex-direction:column;\n    justify-content:center;\n    align-items:center;\n    max-width:65%;\n    gap:20px;\n}\n\nbutton {\n\tbox-shadow:inset 0px 1px 0px 0px #bbdaf7;\n\tbackground:linear-gradient(to bottom, #79bbff 5%, #378de5 100%);\n\tbackground-color:#79bbff;\n\tborder-radius:32px;\n\tborder:5px solid #84bbf3;\n\tdisplay:inline-block;\n\tcursor:pointer;\n\tcolor:#ffffff;\n\tfont-family:Arial;\n\tfont-size:23px;\n\tfont-weight:bold;\n\tpadding:6px 24px;\n\ttext-decoration:none;\n\ttext-shadow:0px 1px 0px #528ecc;\n}\nbutton:hover {\n\tbackground:linear-gradient(to bottom, #378de5 5%, #79bbff 100%);\n\tbackground-color:#378de5;\n}\n\nbutton {\n\tposition:relative;\n\ttop:1px;\n}\n\n        \n.homeContentDiv {\n\n    display:flex;\n    align-items:center;\n    justify-content:center;\n}\n\n.homeContentDiv > img {\n    max-width:50%;\n    max-height:50%;\n}"],sourceRoot:""}]);const c=i},645:n=>{n.exports=function(n){var t=[];return t.toString=function(){return this.map((function(t){var e="",o=void 0!==t[5];return t[4]&&(e+="@supports (".concat(t[4],") {")),t[2]&&(e+="@media ".concat(t[2]," {")),o&&(e+="@layer".concat(t[5].length>0?" ".concat(t[5]):""," {")),e+=n(t),o&&(e+="}"),t[2]&&(e+="}"),t[4]&&(e+="}"),e})).join("")},t.i=function(n,e,o,r,a){"string"==typeof n&&(n=[[null,n,void 0]]);var i={};if(o)for(var c=0;c<this.length;c++){var s=this[c][0];null!=s&&(i[s]=!0)}for(var d=0;d<n.length;d++){var l=[].concat(n[d]);o&&i[l[0]]||(void 0!==a&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=a),e&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=e):l[2]=e),r&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=r):l[4]="".concat(r)),t.push(l))}},t}},537:n=>{n.exports=function(n){var t=n[1],e=n[3];if(!e)return t;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(e)))),r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),a="/*# ".concat(r," */"),i=e.sources.map((function(n){return"/*# sourceURL=".concat(e.sourceRoot||"").concat(n," */")}));return[t].concat(i).concat([a]).join("\n")}return[t].join("\n")}},379:n=>{var t=[];function e(n){for(var e=-1,o=0;o<t.length;o++)if(t[o].identifier===n){e=o;break}return e}function o(n,o){for(var a={},i=[],c=0;c<n.length;c++){var s=n[c],d=o.base?s[0]+o.base:s[0],l=a[d]||0,p="".concat(d," ").concat(l);a[d]=l+1;var A=e(p),u={css:s[1],media:s[2],sourceMap:s[3],supports:s[4],layer:s[5]};if(-1!==A)t[A].references++,t[A].updater(u);else{var f=r(u,o);o.byIndex=c,t.splice(c,0,{identifier:p,updater:f,references:1})}i.push(p)}return i}function r(n,t){var e=t.domAPI(t);return e.update(n),function(t){if(t){if(t.css===n.css&&t.media===n.media&&t.sourceMap===n.sourceMap&&t.supports===n.supports&&t.layer===n.layer)return;e.update(n=t)}else e.remove()}}n.exports=function(n,r){var a=o(n=n||[],r=r||{});return function(n){n=n||[];for(var i=0;i<a.length;i++){var c=e(a[i]);t[c].references--}for(var s=o(n,r),d=0;d<a.length;d++){var l=e(a[d]);0===t[l].references&&(t[l].updater(),t.splice(l,1))}a=s}}},569:n=>{var t={};n.exports=function(n,e){var o=function(n){if(void 0===t[n]){var e=document.querySelector(n);if(window.HTMLIFrameElement&&e instanceof window.HTMLIFrameElement)try{e=e.contentDocument.head}catch(n){e=null}t[n]=e}return t[n]}(n);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(e)}},216:n=>{n.exports=function(n){var t=document.createElement("style");return n.setAttributes(t,n.attributes),n.insert(t,n.options),t}},565:(n,t,e)=>{n.exports=function(n){var t=e.nc;t&&n.setAttribute("nonce",t)}},795:n=>{n.exports=function(n){var t=n.insertStyleElement(n);return{update:function(e){!function(n,t,e){var o="";e.supports&&(o+="@supports (".concat(e.supports,") {")),e.media&&(o+="@media ".concat(e.media," {"));var r=void 0!==e.layer;r&&(o+="@layer".concat(e.layer.length>0?" ".concat(e.layer):""," {")),o+=e.css,r&&(o+="}"),e.media&&(o+="}"),e.supports&&(o+="}");var a=e.sourceMap;a&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),t.styleTagTransform(o,n,t.options)}(t,n,e)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(t)}}}},589:n=>{n.exports=function(n,t){if(t.styleSheet)t.styleSheet.cssText=n;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(n))}}}},t={};function e(o){var r=t[o];if(void 0!==r)return r.exports;var a=t[o]={id:o,exports:{}};return n[o](a,a.exports,e),a.exports}e.n=n=>{var t=n&&n.__esModule?()=>n.default:()=>n;return e.d(t,{a:t}),t},e.d=(n,t)=>{for(var o in t)e.o(t,o)&&!e.o(n,o)&&Object.defineProperty(n,o,{enumerable:!0,get:t[o]})},e.o=(n,t)=>Object.prototype.hasOwnProperty.call(n,t),e.nc=void 0,(()=>{var n=e(379),t=e.n(n),o=e(795),r=e.n(o),a=e(569),i=e.n(a),c=e(565),s=e.n(c),d=e(216),l=e.n(d),p=e(589),A=e.n(p),u=e(890),f={};f.styleTagTransform=A(),f.setAttributes=s(),f.insert=i().bind(null,"head"),f.domAPI=r(),f.insertStyleElement=l(),t()(u.Z,f),u.Z&&u.Z.locals&&u.Z.locals;let C=document.getElementById("content"),m=document.createElement("h1"),h=document.createElement("p"),b=document.createElement("div"),x=new Image;function v(n,t){m.textContent="",m.textContent=n,C.appendChild(m),h.textContent="",h.textContent=t,C.appendChild(h)}function g(){for(;b.firstChild;)b.removeChild(b.firstChild)}let B=new Image;function y(){v("My Restaurant","Welcome to my restaurant page. This was created using Webpack and Javascript only. The project did not allow any hard coding of HTML and everything was rendered using modules and javascript"),g();let n=document.createElement("div");C.appendChild(n),n.appendChild(b),b.appendChild(B),n.classList.add("homeContentDiv")}B.src="https://images.unsplash.com/photo-1552566626-52f8b828add9?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1170&q=80";let w=new Image;function I(){v("About Us","I am a new Web Developer who is constantly learning about HTML/CSS/Javascript and front end libraries. This Restaurant page is one of the projects I have been working on"),g(),C.appendChild(b),b.appendChild(w)}function k(){v("Menu","Please find out menu below and let us know how we can assist you!"),g(),C.appendChild(b),b.appendChild(x),console.log(x)}w.src="https://images.unsplash.com/photo-1582213782179-e0d53f98f2ca?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1170&q=80",x.src="https://cdn1.vectorstock.com/i/1000x1000/67/95/breakfast-menu-template-for-restaurant-and-cafe-vector-30246795.jpg",function(){let n=document.createElement("div");C.appendChild(n);let t=document.createElement("button");t.textContent="Home",n.appendChild(t),t.addEventListener("click",y);let e=document.createElement("button");e.textContent="About Us",n.appendChild(e),e.addEventListener("click",I);let o=document.createElement("button");o.textContent="Menu",n.appendChild(o),o.addEventListener("click",k)}(),y()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,